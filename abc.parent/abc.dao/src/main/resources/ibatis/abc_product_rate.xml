<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.autoserve.abc.dao.intf.ProductRateDao">
	<resultMap id="BaseResultMap"
		type="com.autoserve.abc.dao.dataobject.ProductRateDO">
		<id column="product_rate_id" property="productRateId" jdbcType="INTEGER" />
		<result column="product_id" property="productId" jdbcType="INTEGER" />
		<result column="product_rate" property="productRate" jdbcType="DECIMAL" />
		<result column="product_min_period" property="productMinPeriod"
			jdbcType="INTEGER" />
		<result column="product_max_period" property="productMaxPeriod"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		product_rate_id, product_id, product_rate,
		product_min_period, product_max_period
	</sql>
	<select id="findProductRateInfoListByParam" parameterType="map"
		resultType="com.autoserve.abc.dao.dataobject.ProductRateInfoDO">
		select
		A.product_rate_id AS productRateId,
		A.product_id AS productId,
		B.product_name AS productName,
		B.product_mark AS productMark,
		A.product_rate AS productRate,
		A.product_min_period AS
		productMinPeriod,
		A.product_max_period AS productMaxPeriod
		from
		abc_product_rate A left JOIN abc_product_info B ON A.product_id =
		B.product_id
		<where>
			<if test="productRateInfo.productId != null">
				B.product_id like
				concat('%',#{productRateInfo.productId,jdbcType=INTEGER},'%')
			</if>
			<if test="productRateInfo.productName != null">
				B.product_name like
				concat('%',#{productRateInfo.productName,jdbcType=VARCHAR},'%')
			</if>
		</where>
		<if test="pageCondition != null">
			limit #{pageCondition.pageOffset,jdbcType=INTEGER},
			#{pageCondition.pageSize,jdbcType=INTEGER}
		</if>
	</select>

	<delete id="deleteByProductId" parameterType="java.lang.Integer">
		delete from
		abc_product_rate
		where product_id = #{productId,jdbcType=INTEGER}
	</delete>

	<select id="findProductAllInfoByProductId" resultType="com.autoserve.abc.dao.dataobject.ProductRateInfoDO"
		parameterType="java.lang.Integer">
		select
		A.product_rate_id AS productRateId,
		A.product_id AS
		productId,
		B.product_name AS productName,
		B.product_mark AS productMark,
		A.product_rate AS productRate,
		A.product_min_period AS
		productMinPeriod,
		A.product_max_period AS productMaxPeriod
		from
		abc_product_rate A left JOIN abc_product_info B ON A.product_id =
		B.product_id
		where A.product_id = #{productId,jdbcType=INTEGER}
	</select>
	<select id="findRateCountByParam" resultType="java.lang.Integer"
		parameterType="com.autoserve.abc.dao.dataobject.ProductRateDO">
		select COUNT(*) from abc_product_rate
		<where>
			<if test="productRate.productId != null">
				and product_id =
				#{productRate.productId,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<select id="findAllCount" resultType="java.lang.Integer">
		select count(*)
		from
		abc_product_rate A left JOIN abc_product_info B ON A.product_id =
		B.product_id
	</select>
	<select id="findCountByParam" resultType="java.lang.Integer"
		parameterType="com.autoserve.abc.dao.dataobject.ProductRateInfoDO">
		select count(*)

		from
		abc_product_rate A left JOIN abc_product_info B ON
		A.product_id =
		B.product_id
		<where>
			<if test="productRateInfo.productName != null">
				B.product_name like
				concat('%',#{productRateInfo.productName,jdbcType=VARCHAR},'%')
			</if>
		</where>
	</select>
	<select id="findProductAllInfo" resultType="com.autoserve.abc.dao.dataobject.ProductRateInfoDO"
		parameterType="java.lang.Integer">
		select
		A.product_rate_id AS productRateId,
		A.product_id AS productId,
		B.product_name AS productName,
		B.product_mark AS productMark,
		A.product_rate AS productRate,
		A.product_min_period AS
		productMinPeriod,
		A.product_max_period AS productMaxPeriod
		from
		abc_product_rate A left JOIN abc_product_info B ON A.product_id =
		B.product_id
		<if test="pageCondition != null">
			limit #{pageCondition.pageOffset,jdbcType=INTEGER},
			#{pageCondition.pageSize,jdbcType=INTEGER}
		</if>
	</select>
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from abc_product_rate
		where product_rate_id =
		#{productRateId,jdbcType=INTEGER}
	</select>
	<delete id="delete" parameterType="java.lang.Integer">
		delete from abc_product_rate
		where product_rate_id = #{productRateId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.autoserve.abc.dao.dataobject.ProductRateDO"
		useGeneratedKeys="true" keyProperty="productRateId1">
		insert into abc_product_rate
		(product_id, product_rate, product_min_period,
		product_max_period)
		values (#{productId,jdbcType=INTEGER},
		#{productRate,jdbcType=DECIMAL},
		#{productMinPeriod,jdbcType=INTEGER},
		#{productMaxPeriod,jdbcType=INTEGER})
	</insert>
	<update id="update" parameterType="com.autoserve.abc.dao.dataobject.ProductRateDO">
		update abc_product_rate
		<set>
			<if test="productId != null">
				product_id = #{productId,jdbcType=INTEGER},
			</if>
			<if test="productRate != null">
				product_rate = #{productRate,jdbcType=DECIMAL},
			</if>
			<if test="productMinPeriod != null">
				product_min_period =
				#{productMinPeriod,jdbcType=INTEGER},
			</if>
			<if test="productMaxPeriod != null">
				product_max_period =
				#{productMaxPeriod,jdbcType=INTEGER},
			</if>
		</set>
		where product_rate_id = #{productRateId,jdbcType=INTEGER}
	</update>
	<select id="findList" parameterType="map" resultMap="BaseResultMap">
		select * FROM abc_product_rate
		<if test="pageCondition != null">
			limit #{pageCondition.pageOffset,jdbcType=INTEGER},
			#{pageCondition.pageSize,jdbcType=INTEGER}
		</if>
	</select>

	<insert id="batchInsert" parameterType="java.util.List">
		insert into abc_product_rate (product_id, product_rate,
		product_min_period,
		product_max_period)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.productId,jdbcType=INTEGER},
			#{item.productRate,jdbcType=DECIMAL},
			#{item.productMinPeriod,jdbcType=INTEGER},
			#{item.productMaxPeriod,jdbcType=INTEGER})
		</foreach>
	</insert>
</mapper>